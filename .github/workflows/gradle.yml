name: CI For Concept Microservice

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix: { dir: [
        'core-banking-service',
        'internet-banking-config-server',
        'internet-banking-fund-transfer-service',
        'internet-banking-user-service',
        'internet-banking-utility-payment-service',
        'internet-banking-service-registry',
        'internet-banking-api-gateway'
      ] }
    permissions:
      contents: read
      security-events: write

    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

      - name: Build
        run: ./gradlew build -x test
        working-directory: ${{ matrix.dir }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.dir }}-artifacts
          path: |
            ${{ matrix.dir }}/build/libs/${{ matrix.dir }}*SNAPSHOT.jar
            ${{ matrix.dir }}/Dockerfile
            ${{ matrix.dir }}/wait-for-it.sh
          retention-days: 1
          overwrite: true

  docker_publish:
    runs-on: ubuntu-latest
    strategy:
      matrix: { dir: [
        'core-banking-service',
        'internet-banking-config-server',
        'internet-banking-fund-transfer-service',
        'internet-banking-user-service',
        'internet-banking-utility-payment-service',
        'internet-banking-service-registry',
        'internet-banking-api-gateway'
      ] }
    permissions:
      contents: read
      packages: write
    needs: build

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.dir }}-artifacts
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
          
      - name: Move artifacts to the correct directory
        shell: bash
        run: |
          mkdir -p ${{ matrix.dir }}-downloaded-artifacts
          mv build ${{ matrix.dir }}-downloaded-artifacts || true
          mv Dockerfile ${{ matrix.dir }}-downloaded-artifacts
          mv wait-for-it.sh ${{ matrix.dir }}-downloaded-artifacts

      - name: Validate artifacts
        run: |
          if [ ! -f "${{ matrix.dir }}-downloaded-artifacts/Dockerfile" ]; then
            echo "Dockerfile not found"
            exit 1
          fi
          if [ ! -f "${{ matrix.dir }}-downloaded-artifacts/wait-for-it.sh" ]; then
            echo "wait-for-it.sh not found"
            exit 1
          fi
        shell: bash

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.dir }}-downloaded-artifacts
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            javatodev/${{ matrix.dir }}:latest
            javatodev/${{ matrix.dir }}:${{ github.sha }}
          cache-from: type=registry,ref=javatodev/${{ matrix.dir }}:latest
          cache-to: type=inline